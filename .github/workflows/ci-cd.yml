name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Run Linter
      run: npx eslint . --ext .ts,.tsx,.js,.jsx
    
    - name: Run Tests
      run: npm test -- --coverage
    
    - name: Upload Coverage
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  build:
    name: Build
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install Dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: dist/
        retention-days: 5

  deploy:
    name: Deploy
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - name: Download Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: build
        path: dist/
    
    - name: Deploy to Production
      # Replace this with your actual deployment steps
      # For example, deploying to Vercel, Netlify, or AWS
      run: |
        echo "Deploying to production..."
        # Add your deployment commands here
